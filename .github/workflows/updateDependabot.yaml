name: update Dependabot

on:
  workflow_dispatch:
    inputs:
      port_payload:
        description: 'The payload from port'
        required: false
        type: string

jobs:
  calculate_Dependabots_low:
    runs-on: ubuntu-latest

    steps:
      - name: Search for Dependabot alerts low
        uses: port-labs/port-github-action@v1
        id: search-low
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: SEARCH
          blueprint: dependabotAlert
          query: |
            {
              "combinator": "and",
              "rules": [
                {
                  "blueprint": "repository",
                  "operator": "relatedTo",
                  "value": "${{ fromJson(inputs.port_payload).context.entity }}"
                },
                {
                  "property": "severity",
                  "operator": "=",
                  "value": "low"
                }
              ]
            }
      - name: Search for Dependabot alerts med
        uses: port-labs/port-github-action@v1
        id: search-med
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: SEARCH
          blueprint: dependabotAlert
          query: |
            {
              "combinator": "and",
              "rules": [
                {
                  "blueprint": "repository",
                  "operator": "relatedTo",
                  "value": "${{ fromJson(inputs.port_payload).context.entity }}"
                },
                {
                  "property": "severity",
                  "operator": "=",
                  "value": "medium"
                }
              ]
            }

      - name: Search for Dependabot alerts high
        uses: port-labs/port-github-action@v1
        id: search-high
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: SEARCH
          blueprint: dependabotAlert
          query: |
            {
              "combinator": "and",
              "rules": [
                {
                  "blueprint": "repository",
                  "operator": "relatedTo",
                  "value": "${{ fromJson(inputs.port_payload).context.entity }}"
                },
                {
                  "property": "severity",
                  "operator": "=",
                  "value": "high"
                }
              ]
            }
    

      - name: Calculate length of entities array low
        id: entity-count-low
        run: echo "::set-output name=entity-counter-low::$(echo '${{ steps.search-low.outputs.entities }}' | jq '. | length')"

      - name: Calculate length of entities array med
        id: entity-count-med
        run: echo "::set-output name=entity-counter-med::$(echo '${{ steps.search-med.outputs.entities }}' | jq '. | length')"
      
      - name: Calculate length of entities array high
        id: entity-count-high
        run: echo "::set-output name=entity-counter-high::$(echo '${{ steps.search-high.outputs.entities }}' | jq '. | length')"

      - name: Update port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          identifier: ${{ fromJson(inputs.port_payload).context.entity }}
          blueprint: repository
          properties: |
            {
              "lowdependabot": ${{ steps.entity-count-low.outputs.entity-counter-low }},
              "meddependabot": ${{ steps.entity-count-med.outputs.entity-counter-med }},
              "highdependabot": ${{ steps.entity-count-high.outputs.entity-counter-high }}
            }